@model StoreItemViewModel

@{
    ViewData["Title"] = "Transaction";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow">
                <h5 class="card-header text-center bg-primary text-white">Transaction</h5>
                <div class="card-body">
                    <form id="transactionForm" asp-action="Transaction" asp-controller="Purchase" method="post">
                        <div class="form-group">
                            <label asp-for="StoreId" class="font-weight-bold">Store:</label>
                            <select asp-for="StoreId" class="form-control" id="storeId">
                                <option value="">Select Store</option>
                                @foreach (var store in Model.Stores)
                                {
                                    <option value="@store.Id">@store.Name</option>
                                }
                            </select>
                            <span asp-validation-for="StoreId" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label asp-for="ItemId" class="font-weight-bold">Item:</label>
                            <select asp-for="ItemId" class="form-control" id="itemId">
                                <option value="">Select Item</option>
                                @foreach (var item in Model.Items)
                                {
                                    <option value="@item.Id">@item.Name</option>
                                }
                            </select>
                            <span asp-validation-for="ItemId" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label for="currentBalance" class="font-weight-bold">Current Balance:</label>
                            <input id="currentBalance" type="text" class="form-control" readonly />
                        </div>

                        <div class="form-group">
                            <label asp-for="Quantity" class="font-weight-bold">Transaction Quantity:</label>
                            <input asp-for="Quantity" id="transactionQuantity" class="form-control" />
                            <span asp-validation-for="Quantity" class="text-danger"></span>
                        </div>

                        <input type="hidden" name="transactionType" value="purchase" /> 

                        <div class="form-group mt-4 text-center">
                            <button id="submitBtn" type="submit" class="btn btn-success px-4">
                                <i class="fas fa-check"></i> Submit
                            </button>
                            <a asp-action="Index" asp-controller="Store" class="btn btn-secondary ml-2 px-4">
                                <i class="fas fa-arrow-left"></i> Back to All Stores
                            </a>
                            <a asp-action="Index" asp-controller="Item" class="btn btn-secondary ml-2 px-4">
                                <i class="fas fa-arrow-left"></i> Back to All Items
                            </a>
                        </div>
                    </form>
                    <div id="transactionAlert" class="mt-3"></div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            function updateCurrentBalance() {
                var itemId = $('#itemId').val();
                var storeId = $('#storeId').val();

                if (itemId && storeId) {
                    $.ajax({
                        url: '@Url.Action("Balance", "Purchase")',
                        type: 'GET',
                        data: { storeId: storeId, itemId: itemId },
                        success: function (result) {
                            $('#currentBalance').val(result);
                        },
                        error: function () {
                            $('#currentBalance').val('Error fetching balance');
                        }
                    });
                } else {
                    $('#currentBalance').val('');
                }
            }

            $('#storeId, #itemId').change(function () {
                updateCurrentBalance();
            });
            updateCurrentBalance();

            $('#transactionForm').submit(function (event) {
                event.preventDefault();

                if ($(this).valid()) {
                    var currentBalance = parseInt($('#currentBalance').val());
                    var transactionQuantity = parseInt($('#transactionQuantity').val());

                    $.ajax({
                        url: $(this).attr('action'),
                        type: 'POST',
                        data: $(this).serialize(),
                        success: function () {
                            updateCurrentBalance();
                            $('#transactionAlert').html('<div class="alert alert-success" role="alert">Transaction submitted successfully.</div>');
                            setTimeout(function () {
                                $('#transactionAlert').html('');
                            }, 5000);
                        },
                        error: function () {
                            $('#transactionAlert').html('<div class="alert alert-danger" role="alert">Error submitting transaction. Please try again later.</div>');
                        }
                    });
                }
            });
        });
    </script>
}
